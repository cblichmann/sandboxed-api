name: ubuntu-cmake

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu 24.04: Use preinstalled Clang 18, 17, 16
          - os: ubuntu-24.04
            compiler: clang
            compiler-version: 18
            libclang-version: 18
            ignore-errors: false
          - os: ubuntu-24.04
            compiler: clang
            compiler-version: 17
            libclang-version: 18
            ignore-errors: false
          - os: ubuntu-24.04
            compiler: clang
            compiler-version: 16
            libclang-version: 18
            ignore-errors: false
          # Ubuntu 24.04: Use preinstalled GCC 9.5.0, 10.4.0, 11.3.0, 12.1.0
          - os: ubuntu-24.04
            compiler: gcc
            compiler-version: 12
            libclang-version: 18
            ignore-errors: false
          - os: ubuntu-24.04
            compiler: gcc
            compiler-version: 11
            libclang-version: 18
            ignore-errors: false
          - os: ubuntu-24.04
            compiler: gcc
            compiler-version: 10
            libclang-version: 18
            ignore-errors: false
          - os: ubuntu-24.04
            compiler: gcc
            compiler-version: 9
            libclang-version: 18
            ignore-errors: false
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.ignore-errors }}

    steps:
    - uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        key: ${{matrix.os}}-${{matrix.compiler}}${{matrix.compiler-version}}
        path: |
          ${{github.workspace}}/build/_deps

    - name: Install ninja-build tool
      uses: turtlesec-no/get-ninja@1.1.0

    - name: Install/configure Clang compiler toolchain
      if: matrix.compiler == 'clang'
      run: |
        sudo apt-get install -qy \
          clang-${{matrix.compiler-version}} \
          libclang1-${{matrix.libclang-version}} \
          python3-clang-${{matrix.libclang-version}}
        echo "CXX=clang++-${{matrix.compiler-version}}" >> $GITHUB_ENV
        echo "CC=clang-${{matrix.compiler-version}}" >> $GITHUB_ENV

    - name: Install/configure GCC compiler toolchain
      if: matrix.compiler == 'gcc'
      run: |
        sudo apt-get install -qy \
          g++-${{matrix.compiler-version}} \
          libclang1-${{matrix.libclang-version}} \
          python3-clang-${{matrix.libclang-version}}
        echo "CXX=g++-${{matrix.compiler-version}}" >> $GITHUB_ENV
        echo "CC=gcc-${{matrix.compiler-version}}" >> $GITHUB_ENV

    - name: Create Build Environment
      run: |
        pip3 install absl-py
        mkdir -p "$GITHUB_WORKSPACE/build"

    - name: Configure CMake
      run: |
        cmake \
          -S $GITHUB_WORKSPACE \
          -B $GITHUB_WORKSPACE/build \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      run: |
        cmake \
          --build $GITHUB_WORKSPACE/build \
          --config $BUILD_TYPE

    - name: Test
      run: |
        ctest \
          --test-dir $GITHUB_WORKSPACE/build \
          -C $BUILD_TYPE \
          --output-on-failure \
          -R SapiTest
